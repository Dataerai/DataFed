<!DOCTYPE html>
<html>
    <head>
        <% include 'head.ect' %>
        <title>DataFed CLI Help</title>
    </head>

<body class='' style='height:100%'>
    <div class="col-flex" style="height:100%;width:100%">
        <div class="ui-widget-header" style="flex:none;padding:.25em .5em">
            <div style="font-size:2em;">DataFed - Command-Line-Interface Help &amp Installation </div>
        </div>

        <div class='row-flex' style="flex:auto;min-height:0px">
            <div class="ui-widget-content content" style="flex:none;overflow:auto;padding:.25em">
                <h2>Contents</h2>
                <a href='#s1'>1. Introduction</a><br>
                <a href='#s2'>2. Installation</a><br>
                <a href='#s3'>3. Configuration</a><br>
                &nbsp&nbsp<a href='#s31'>3.1 Configuration Settings</a><br>
                &nbsp&nbsp&nbsp&nbsp<a href='#s311'>3.1.1 Server Config File</a><br>
                &nbsp&nbsp&nbsp&nbsp<a href='#s312'>3.1.2 Server Config Directory</a><br>
                &nbsp&nbsp&nbsp&nbsp<a href='#s313'>3.1.3 Server Public Key File</a><br>
                &nbsp&nbsp&nbsp&nbsp<a href='#s314'>3.1.4 Server Host</a><br>
                &nbsp&nbsp&nbsp&nbsp<a href='#s315'>3.1.5 Server Port</a><br>
                &nbsp&nbsp&nbsp&nbsp<a href='#s316'>3.1.6 Client Config File</a><br>
                &nbsp&nbsp&nbsp&nbsp<a href='#s317'>3.1.7 Client Config Directory</a><br>
                &nbsp&nbsp&nbsp&nbsp<a href='#s318'>3.1.8 Client Public Key File</a><br>
                &nbsp&nbsp&nbsp&nbsp<a href='#s319'>3.1.9 Client Private Key File</a><br>
                &nbsp&nbsp&nbsp&nbsp<a href='#s3110'>3.1.10 Default Endpoint</a><br>
                &nbsp&nbsp&nbsp&nbsp<a href='#s3111'>3.1.11 Default Verbosity</a><br>
                &nbsp&nbsp&nbsp&nbsp<a href='#s3112'>3.1.12 Default Interactivity</a><br>
                &nbsp&nbsp<a href='#s32'>3.2 Configuration Files</a><br>
                &nbsp&nbsp<a href='#s33'>3.3 Configuration Priority</a><br>
                &nbsp&nbsp<a href='#s34'>3.4 Automatic Authentication</a><br>
                <a href='#s4'>4. Commands</a><br>
                <a href='#s5'>5. Client API</a><br>
            </div>
            <div class='ui-widget-content' style='flex:auto;height:auto;overflow:auto;padding: 0em 2em 0em 2em'>

<h2 id='s1'>1. Introduction</h2>

<p>The DataFed command-line-interface (CLI) provides access to basic DataFed features for both interactive use and scripting. The DataFed CLI is provided via a Python3 package, called "datafed", available on PyPi and installable using the Python pip tool. The "datafed" package also contains a Python API that can be used to build custom Python applications that directly interface with DataFed. (A C++ client library is also available from the DataFed code repository.)</p>

<h2 id='s2'>2. Installation</h2>

<p>The DataFed CLI is typically pre-installed within the compute and data environments of DataFed-supported facilities; however, if you need to use the DataFed CLI from a non-supported facility or device, then you will need to install and configure the CLI manually. Like most Python packages, the DataFed CLI is installed using Python's "pip" tool, as follows:<p>

<pre style='margin:0 5em'>pip install datafed</pre>

<p>
Once the DataFed package and its dependencies are installed, the "datafed" script will be available in the Python path to run the CLI either interactively or from scripts. Note, however, that the DataFed CLI must be properly <a href='#s21'>configured</a> before it can be used. After configuration, refer to the <a href='#s3'>Commands</a> section, below, for details on how to use the DataFed CLI (a '--help' option is also available). Several DataFed Python modules are available for direct access to DataFed services from custom Python scripts, and these modules are documented in the <a href='#s4'>Client API</a> section, below.
</p>

<h2 id='s3'>3 Configuration</h2>

<p>
Users would typically not need to configure the DataFed CLI from within a facility-supported environment; however, when installing the CLI within an unsupported environment, such as a laptop, the CLI must be configured by the user. Configuration settings may be specified using environment variables, configuration files, or command-line options (or any combination thereof), and the majority of these settings relate to client-server communication. The following sections list and describe the DataFed CLI settings.</p>

<h3 id='s31'>3.1 Configuration Settings</h3>

<p>
Table 3.1-1, below, lists all of the CLI settings and how they can be set using either a configuration file (.ini), an environment variable, or a command-line option. Many of the listed settings relate to configuring the communication channel between the CLI and the DataFed server (aka Core Services). Because all communications across the channel are encrypted, the locations of public and private DataFed encryption key files must be specified. These keys are similar to SSH keys, but they are unique to DataFed; however, like SSH keys, access to private DataFed key files must be restricted to prevent unauthorized access to user accounts. Configuring DataFed key files, as well as other settings, are discussed in following sections.
</p>

<table class='border-table'>
<tr><th colspan="2">Config File</th><th rowspan="2">Environment Variable</th><th rowspan="2">CLI Option(s)</th><th rowspan="2">Description</th></tr>
<tr><th>Section</th><th>Setting</th></tr>
<tr><td>N/A</td><td>N/A</td><td>DATAFED_SERVER_CFG_FILE</td><td>--server-cfg-file</td><td>Server configuration file</td></tr>
<tr><td>server</td><td>config_dir</td><td>DATAFED_SERVER_CFG_DIR</td><td>--server-cfg-dir</td><td>Server configuration directory</td></tr>
<tr><td>server</td><td>public_key_file</td><td>DATAFED_SERVER_PUB_KEY_FILE</td><td>--server-pub-key-file</td><td>Server public key file</td></tr>
<tr><td>server</td><td>host</td><td>DATAFED_SERVER_HOST</td><td>--server-host, -H</td><td>Sever host name or IP address</td></tr>
<tr><td>server</td><td>port</td><td>DATAFED_SERVER_PORT</td><td>--server-port, -P</td><td>Server port number</td></tr>
<tr><td>client</td><td>config_file</td><td>DATAFED_CLIENT_CFG_FILE</td><td>--client-cfg-file</td><td>Client configuration file</td></tr>
<tr><td>client</td><td>config_dir</td><td>DATAFED_CLIENT_CFG_DIR</td><td>--client-cfg-dir</td><td>Client configuration directory</td></tr>
<tr><td>client</td><td>public_key_file</td><td>DATAFED_CLIENT_PUB_KEY_FILE</td><td>--client-pub-key-file</td><td>Client public key file</td></tr>
<tr><td>client</td><td>private_key_file</td><td>DATAFED_CLIENT_PRIV_KEY_FILE</td><td>--client-priv-key-file</td><td>Client private key file</td></tr>
<tr><td>general</td><td>default_endpoint</td><td>DATAFED_DEFAULT_ENDPOINT</td><td>--default-ep, -e</td><td>Default Globus endpoint</td></tr>
<tr><td>general</td><td>verbosity</td><td>DATAFED_DEFAULT_VERBOSITY</td><td>--verbosity, -v</td><td>Verbosity level (0=quiet,1=normal,2=verbose) for text-format output only.</td></tr>
<tr><td>general</td><td>interactive</td><td>DATAFED_DEFAULT_INTERACT</td><td>--interactive/--no-interactive, -i/-n</td><td>Start an interactive session</td></tr>
</table><br>
<center><b>Table 3.1-1 DataFed Client Configuration Settings</b></center>

<h4 id='s311'>3.1.1 Server Configuration File</h4>

<table class='border-table cfg-info-table'>
<tr><td>Cfg. File</td><td>N/A</td></tr>
<tr><td>Env. Var.</td><td>DATAFED_SERVER_CFG_FILE</td></tr>
<tr><td>Option</td><td>--server-cfg-file</td></tr>
</table>

<p>
The server configuration file setting specifies a full path to a server ".ini" file. This file may contain additional settings as specified in Table 3.1-1.
</p>

<h4 id='s312'>3.1.2 Server Configuration Directory</h4>

<table class='border-table cfg-info-table'>
<tr><td>Cfg. File</td><td>[server] config_dir</td></tr>
<tr><td>Env. Var.</td><td>DATAFED_SERVER_CFG_DIR</td></tr>
<tr><td>Option</td><td>--server-cfg-dir</td></tr>
</table>

<p>
The server configuration directory setting specifies a path to a directory that will be searched for a default server config file, "server.ini", and the default server public key, "datafed-core-key.pub". If this setting is not provided, "~/.default" will be searched if it exists.
</p>

<h4 id='s313'>3.1.3 Server Public Key File</h4>

<table class='border-table cfg-info-table'>
<tr><td>Cfg. File</td><td>[server] public_key_file</td></tr>
<tr><td>Env. Var.</td><td>DATAFED_SERVER_PUB_KEY_FILE</td></tr>
<tr><td>Option</td><td>--server-pub-key-file</td></tr>
</table>

<p>
The server public key file setting specifies a full path to a locally accessible file containing the latest DataFed server public key. If this setting is not provided, the CLI will look for a default key file, "datafed-core-key.pub", in the server config directory (or "~/.datafed" if no directory is specified). The latest DataFed server public key file must is available for download from the following link:
</p>
<a href='/datafed-core-key.pub' style='margin:0 5em'>Download DataFed Server Public Key</a>

<p>
Note that if the server public key is invalid or out of date, the CLI will timeout after 10 seconds from being run.
</p>

<h4 id='s314'>3.1.4 Server Host</h4>

<table class='border-table cfg-info-table'>
<tr><td>Cfg. File</td><td>[server] host</td></tr>
<tr><td>Env. Var.</td><td>DATAFED_SERVER_HOST</td></tr>
<tr><td>Option</td><td>--server-host, -H</td></tr>
</table>

<p>
The server host setting is the DataFed server name or IP address with no protocol prefix or port number - for example: "datafed.ornl.gov". Note that if the server host is incorrect, the CLI will timeout after 10 seconds from being run.
</p>

<h4 id='s315'>3.1.5 Server Port</h4>

<table class='border-table cfg-info-table'>
<tr><td>Cfg. File</td><td>[server] port</td></tr>
<tr><td>Env. Var.</td><td>DATAFED_SERVER_PORT</td></tr>
<tr><td>Option</td><td>--server-port, -P</td></tr>
</table>

<p>
The server port setting is the TCP port number used by the DataFed server for secure client connections. This port number is distinct from two other ports used by the DataFed server for back-end services cross-communication. Note that if the server port number is incorrect, the CLI will timeout after 10 seconds from being run.
</p>


<h4 id='s316'>3.1.6 Client Configuration File</h4>

<table class='border-table cfg-info-table'>
<tr><td>Cfg. File</td><td>[client] config_file</td></tr>
<tr><td>Env. Var.</td><td>DATAFED_CLIENT_CFG_FILE</td></tr>
<tr><td>Option</td><td>--client-cfg-file</td></tr>
</table>

<p>
The client configuration file setting specifies a full path to a server ".ini" file. This file may contain additional settings as specified in Table 3.1-1. Note that settings in the client configuration file will override the same settings in the server configuration file, if present.
</p>

<h4 id='s317'>3.1.7 Client Config Directory</h4>

<table class='border-table cfg-info-table'>
<tr><td>Cfg. File</td><td>[client] config_dir</td></tr>
<tr><td>Env. Var.</td><td>DATAFED_CLIENT_CFG_DIR</td></tr>
<tr><td>Option</td><td>--client-cfg-dir</td></tr>
</table>

<p>
The client configuration directory setting specifies a path to a directory that will be searched for a default client config file, "client.ini", and the default client public and private keys, "datafed-user-key.pub" and "datafed-user-key.priv". If this setting is not provided, "~/.default" will be searched if it exists.
</p>


<h4 id='s318'>3.1.8 Client Public Key File</h4>

<table class='border-table cfg-info-table'>
<tr><td>Cfg. File</td><td>[client] public_key_file</td></tr>
<tr><td>Env. Var.</td><td>DATAFED_CLIENT_PUB_KEY_FILE</td></tr>
<tr><td>Option</td><td>--client-pub-key-file</td></tr>
</table>

<p>
The client public key file setting specifies a full path to a locally accessible file containing the DataFed client public key. If this setting is not provided, the CLI will look for a default key file, "datafed-user-key.pub", in the client config directory (or "~/.datafed" if no directory is specified). Client key files are automatically created in the specified location by the CLI (see <a href="#s34">Configuring Automatic Authentication</a>
</p>


<h4 id='s319'>3.1.9 Client Private Key File</h4>

<table class='border-table cfg-info-table'>
<tr><td>Cfg. File</td><td>[client] private_key_file</td></tr>
<tr><td>Env. Var.</td><td>DATAFED_CLIENT_PRIV_KEY_FILE</td></tr>
<tr><td>Option</td><td>--client-priv-key-file</td></tr>
</table>

<p>
The client private key file setting specifies a full path to a locally accessible file containing the DataFed client private key. If this setting is not provided, the CLI will look for a default key file, "datafed-user-key.priv", in the client config directory (or "~/.datafed" if no directory is specified). Client key files are automatically created in the specified location by the CLI (see <a href="#s34">Configuring Automatic Authentication</a>
</p>

<h4 id='s3110'>3.1.10 Default Endpoint</h4>

<table class='border-table cfg-info-table'>
<tr><td>Cfg. File</td><td>[general] default_endpoint</td></tr>
<tr><td>Env. Var.</td><td>DATAFED_DEFAULT_ENDPOINT</td></tr>
<tr><td>Option</td><td>--default-ep, -e</td></tr>
</table>

<p>
The default endpoint setting determines which Globus endpoint to prepend to the source or destination path of a "put" or "get" command, respectively, when no endpoint is specified. The default end-point can be changed with the "ep default" command, or temporarily overridden use the "ep set" command.
</p>

<h4 id='s3111'>3.1.11 Default Verbosity</h4>

<table class='border-table cfg-info-table'>
<tr><td>Cfg. File</td><td>[general] verbosity</td></tr>
<tr><td>Env. Var.</td><td>DATAFED_DEFAULT_VERBOSITY</td></tr>
<tr><td>Option</td><td>--verbosity, -v</td></tr>
</table>

<p>
The default verbosity level setting adjusts the output detail level for text-format output only. The value is an integer, where 0 = quiet, 1 = normal, and 2 = verbose.
</p>

<h4 id='s3112'>3.1.12 Default Interactivity</h4>

<table class='border-table cfg-info-table'>
<tr><td>Cfg. File</td><td>[general] interactive</td></tr>
<tr><td>Env. Var.</td><td>DATAFED_DEFAULT_INTERACT</td></tr>
<tr><td>Option</td><td>--interactive/--no-interactive, -i/-n</td></tr>
</table>

<p>
The default interactivity setting determines if an interactive shell is started when the CLI is run, with or without an initial command. For configuration files and environment variables, the value is an integer where 0 = non-interactive, and 1 = interactive. This setting is a simple flag (no value) when used as a CLI option.
</p>


<div class='clearfix'>
    <h3 id='s32'>3.2 Configuration Files</h3>

    <div style='float:right;margin:0 1em 1em 1em'>
<pre style="border:1px solid #808080;padding:1em;margin:0 1em 1em 0">
[server]
host = datafed.ornl.gov
port = 7512
config_dir = /usr/share/datafed

[client]
config_dir = ~/.datafed

[general]
default_endpoint = cades#CADES-OR
</pre>
        <center><b>Example Configuration File</b></center>
    </div>

    <p>
    Both a server and a client configuration file may be used to specify CLI settings. Typically, a server configuration file would be maintained by a system administrator and contain server-only settings. Per-user client configuration files would allow individuals to tailor their CLI settings by specifying additional options, or overriding server settings (the client file takes priority over the server file). 
    </p>
    <p>
    Both server and client configuration files are standard ".ini" files and follow the same format, and Table 3.1-1 (above) shows the section and setting name for all available options. An example configuration file is shown to the right.
    </p>
</div>

<div class='clearfix'>
    <h3 id='s33'>3.3 Configuration Priority</h3>

    <div style='float:right; margin:0 1em 1em 1em'>
        <table class='border-table'>
        <tr><th>Source</th><th>Priority</th></tr>
        <tr><td>Default</td><td>0 (lowest)</td></tr>
        <tr><td>Environment Variable</td><td>1</td></tr>
        <tr><td>Server Config File</td><td>2</td></tr>
        <tr><td>Client Config File</td><td>3</td></tr>
        <tr><td>Command-Line Option</td><td>4</td></tr>
        <tr><td>Programmatic</td><td>5 (highest)</td></tr>
        </table><br>
        <center><b>Source Priorities</b></center>
    </div>

    <p>
    Each mechanism for specifying settings (environment variables, files, options, etc.) has a given priority, and individual settings from configuration sources with higher priorities override those with lower priorities. The result is that various configuration settings may come from a variety of sources (defaults or set by system administrators), but these settings can always be overridden by the user by using the appropriate mechanism. Configuration source priorities are shown to the right.
    </p>
    <p>
    Note that most settings do not have default values and must be specified using one of the supported mechanisms. The server and client configuration files and directories are exceptions in that the CLI will search for a ".datafed" folder in the user home directory if these settings are not specified.
    </p>
</div>


<h3 id='s34'>3.4 Configuring Automatic Authentication</h3>

<p>Once the DataFed CLI is installed and configured, automatic authentication can be enabled for the CLI by installing local client credentials (encryption key files). This is done by simply running the following CLI command from the environment to be configured for automatic authentication:</p>

<pre style='margin:0 5em'>datafed setup</pre>

<p>When run, manual authentication will be required, then the CLI will install local user encryption keys (public and private) in the configured client configuration directory (see <a href='#s31'>Configuration Settings</a>, above). Subsequent use of the DateFed CLI within the same environment will authenticate using the local client keys. These client key files must be protected and kept private. In the event of a security incident, automatic authentication can be disabled by deleting the local key files, or, alternatively, all of a user's installed keys can be revoked from the DataFed Web Portal using the "Revoke Credentials" button in the application settings dialog. (This does not delete local key files, but invalidates the keys on the server side.)</p>

<h2 id='s4'>4. Commands</h2>

<span style='color:red'>TO DO: LIST AND DESCRIBE ALL COMMANDS WITH OPTIONS</span>

<h2 id='s5'>5. Client API</h2>

<p>The DataFed Python CLI package includes a client library module, "ClientLib.py", used by the CLI to communicate with central DataFed services. This module is available for integration into custom, user-created Python applications. The ClientLib module provides basic connectivity and authentication functionality, as well as access to the underlying message-based application programming interface (MAPI) used by DataFed services. The DataFed MAPI (requests, replies, and associated data structures) is defined by a set of included Google Protocol Buffer files (.proto extension). At a very basic level, an application would created, initialize, and send a request message to the DataFed server using functions in the ClientLib module. Subsequent reply messages are received (synchronously or asynchronously) and decoded for processing by the application.</p>
<p>A similar C++ client library is also available in the DataFed code repository, at https://github.com/ORNL/DataFed. Please refer to the DataFed MAPI documentation for further information regarding both the Python and C++ MAPIs. All documentation is located in the "/docs" folder of the DataFed code repository.</p>
            </div>
        </div>
    </div>
</body>
</html>
