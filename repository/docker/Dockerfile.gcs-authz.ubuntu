FROM camden.ornl.gov/datafed/gcs-authz-base:latest as build

ARG DATAFED_DIR="/datafed"
ARG BUILD_DIR="/datafed/source"
ARG DATAFED_INSTALL_PATH="/datafed/install"

# The above should also be available at runtime
ENV DATAFED_DIR="$DATAFED_DIR"
ENV BUILD_DIR="$BUILD_DIR"
ENV DATAFED_INSTALL_PATH="$DATAFED_INSTALL_PATH"
ENV GCS_COLLECTION_ROOT_PATH="$DATAFED_DIR/collections/mapped"

RUN mkdir -p ${BUILD_DIR}/logs
RUN mkdir -p ${BUILD_DIR}/common/proto
RUN mkdir -p ${DATAFED_INSTALL_PATH}/authz
RUN mkdir -p ${DATAFED_DIR}/collections/mapped

# vim and nc are for debugging
RUN apt-get install vim netcat -y

# For communicating with public
EXPOSE 443

# Needed for Globus GridFTP communication
EXPOSE 50000-51000

# Create datafed user, prefer more secure login options than password
# Recommended to mount ssh public key on run
RUN adduser --disabled-password --gecos "" datafed

WORKDIR ${BUILD_DIR}

COPY ./scripts/dependency_versions.sh ${BUILD_DIR}/scripts/
COPY ./scripts/generate_authz_config.sh ${BUILD_DIR}/scripts/generate_authz_config.sh
COPY ./scripts/generate_datafed.sh ${BUILD_DIR}/scripts/generate_datafed.sh
COPY ./CMakeLists.txt ${BUILD_DIR}
COPY ./cmake ${BUILD_DIR}/cmake
COPY ./repository/CMakeLists.txt ${BUILD_DIR}/repository/CMakeLists.txt
COPY ./repository/gridftp/CMakeLists.txt ${BUILD_DIR}/repository/gridftp/CMakeLists.txt
COPY ./repository/gridftp/globus5 ${BUILD_DIR}/repository/gridftp/globus5
COPY ./common ${BUILD_DIR}/common

# All files should be owned by the datafed user
RUN chown -R datafed:datafed ${DATAFED_DIR}

# Build as if a non root user
USER datafed

RUN ${BUILD_DIR}/scripts/generate_datafed.sh

RUN ${BUILD_DIR}/scripts/generate_authz_config.sh &&\
 cmake -S. -B build -DBUILD_REPO_SERVER=False -DBUILD_AUTHZ=True \
                    -DBUILD_CORE_SERVER=False -DBUILD_WEB_SERVER=False \
                    -DBUILD_DOCS=False -DBUILD_PYTHON_CLIENT=False \
                    -DBUILD_FOXX=False && \
 cmake --build build
RUN cmake --build build --target install

COPY ./scripts/globus/setup_globus.sh ${BUILD_DIR}/scripts/globus/setup_globus.sh
COPY ./scripts/globus/generate_repo_form.sh ${BUILD_DIR}/scripts/globus/generate_repo_form.sh
COPY ./repository/docker/entrypoint_authz.sh ${BUILD_DIR}/repository/docker/entrypoint_authz.sh

USER root

WORKDIR ${DATAFED_INSTALL_PATH}/authz
# Rerunning the GCS entrypoint
# Default command unless overriden with 'docker run --entrypoint'
#ENTRYPOINT ["/entrypoint.sh"]
# Default options to ENTRYPOINT unless overriden with 'docker run arg1...'
#CMD []
