---
stages:
  - build

include:
  - local: .gitlab/common.yml

build-gcs-base:
  stage: build
  variables:
    IMAGE_TAG: "datafed/gcs-base"
    GIT_SUBMODULE_STRATEGY: recursive
    GIT_STRATEGY: clone
  tags:
    - ci-datafed-globus
    - docker
  rules:
    - changes:
        - docker/**/*
        - scripts/**/*
        - common/**/*
        - .gitlab-ci.yml
        - CMakeLists.txt
        - cmake/**/*
      when: on_success
  script:
    - BRANCH_LOWER=$(echo "$CI_COMMIT_REF_NAME" | tr '[:upper:]' '[:lower:]')
    - echo "$BRANCH_LOWER"
    - source "scripts/dependency_versions.sh"
    - cd "external/globus-connect-server-deploy/docker"
    - git checkout "$DATAFED_GCS_SUBMODULE_VERSION"
    - docker login "${REGISTRY}" -u "${HARBOR_USER}" -p "${HARBOR_DATAFED_GITLAB_CI_REGISTRY}"
    - docker build --progress plain -t "${REGISTRY}/${IMAGE_TAG}-${BRANCH_LOWER}:latest" - < "./docker-files/Dockerfile.ubuntu-20.04"
    - docker tag "${REGISTRY}/${IMAGE_TAG}-${BRANCH_LOWER}:latest" "${REGISTRY}/${IMAGE_TAG}-${BRANCH_LOWER}:$CI_COMMIT_SHA"
    - export DATAFED_HARBOR_REPOSITORY="${IMAGE_TAG}-${BRANCH_LOWER}"
    - export DATAFED_HARBOR_USERNAME="${HARBOR_USER}"
    - export DATAFED_HARBOR_PASSWORD="${HARBOR_DATAFED_GITLAB_CI_REGISTRY}"
    - docker push "${REGISTRY}/${DATAFED_HARBOR_REPOSITORY}:latest"
    - docker push "${REGISTRY}/${DATAFED_HARBOR_REPOSITORY}:$CI_COMMIT_SHA"
    - |
      while [ "$(./scripts/ci_harbor_artifact_count.sh)" == "0" ]; do
        echo "Artifact missing from harbor..."
        docker push "${REGISTRY}/${DATAFED_HARBOR_REPOSITORY}:latest"
        docker push "${REGISTRY}/${DATAFED_HARBOR_REPOSITORY}:$CI_COMMIT_SHA"
        sleep 5  # Optional: Add a sleep to avoid busy waiting 
      done
    - cat "./harbor_check.log"

retag-image:
  extends: .docker_retag_image:
  stage: build
  variables:
    IMAGE_TAG: "datafed/gcs-base"
    GIT_STRATEGY: clone
  tags:
    - docker
