FROM centos:centos7

# CMake - Build-time only variables
ARG CMAKE_MAJOR_MINOR_VERSION="3.16"
ARG CMAKE_PATCH_LEVEL="3"
ARG CMAKE_VERSION="${CMAKE_MAJOR_MINOR_VERSION}.${CMAKE_PATCH_LEVEL}"
ARG CMAKE_DIR="cmake-${CMAKE_VERSION}"
ARG CMAKE_ARCHIVE="${CMAKE_DIR}.tar.gz"
ARG CMAKE_DOWNLOAD_LINK="https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/${CMAKE_ARCHIVE}"

ARG PBUF_MAJOR_MINOR_VERSION="3.11"
ARG PBUF_PATCH_LEVEL="2"
ARG PBUF_VERSION="${PBUF_MAJOR_MINOR_VERSION}.${PBUF_PATCH_LEVEL}"
ARG PBUF_DIR="protobuf-${PBUF_VERSION}"
ARG PBUF_ARCHIVE="protobuf-python-${PBUF_VERSION}.tar.gz"
ARG PBUF_DOWNLOAD_LINK="https://github.com/protocolbuffers/protobuf/releases/download/v${PBUF_VERSION}/${PBUF_ARCHIVE}"

# ZeroMQ, Protobuf, and pyenv - Runtime variables
ENV ZMQ_INC_DIR="/usr/include"
ENV PBUF_INC_DIR="/usr/local/include/google/protobuf"

ENV ZMQ_LIB_DIR="/usr/lib64"
ENV PBUF_LIB_DIR="/usr/local/lib"

# Change to working directory for installing "extra" software
WORKDIR /opt

# Install OS dependencies (to just get CMake installed)
#  - CMake and Protobuf install layers take forever,
#    so moving install of other dependencies to a post-layer, 
#    since they can change (for initial development)
#
#  - TODO: If supporting multiple versions of python, switch to pyenv
#          This would be very helpful for running tox to test the Python CLI
RUN yum update -y \
    && yum install epel-release -y \
    && yum group install "Development Tools" -y \
    && yum install wget openssl-devel python36 -y

# Install CMake from source
#  - needed to get v3.x.x)
RUN wget ${CMAKE_DOWNLOAD_LINK} \
    && tar xvzf ${CMAKE_ARCHIVE} \
    && cd ${CMAKE_DIR} \
    && ./bootstrap --prefix=/usr/local \
    && make \
    && make install

# Install Protobuf (compiler and python package)
#  - needed to get v3.x.x)
#  - also, to get a consistent version between protoc and python-protobuf packages
RUN wget ${PBUF_DOWNLOAD_LINK} \
    && tar xvzf ${PBUF_ARCHIVE} \
    && cd ${PBUF_DIR} \
    && ./autogen.sh \
    && ./configure \
    && make \
    && make install \
    && cd python \
    && python3 setup.py build \
    && python3 setup.py test \
    && python3 setup.py install

# Install Globus Connect Server
#  - instructions: https://docs.globus.org/globus-connect-server-installation-guide/
RUN mkdir globus-connect-server \
    && cd globus-connect-server \
    && curl -LOs https://downloads.globus.org/toolkit/globus-connect-server/globus-connect-server-repo-latest.noarch.rpm \
    && rpm --import https://downloads.globus.org/toolkit/gt6/stable/repo/rpm/RPM-GPG-KEY-Globus \
    && yum install globus-connect-server-repo-latest.noarch.rpm yum-plugin-priorities -y \
    && yum install globus-connect-server -y \
    && cd ..

# Install extra dependencies:
RUN yum install -y \
        boost-devel \
        libcurl-devel \
        ninja-build \
        rapidjson-devel \
        vim \
        zeromq-devel

# Install python dependencies
RUN pip3 install pip --upgrade

