import "SDMS.proto";

package SDMS.Auth;

enum Protocol
{
    ID = 2;
}


// ============================ Setup/Config Messages

message GenerateCredentialsRequest
{
    optional bool               x509        = 1;
    optional bool               ssh         = 2;
}

message GenerateCredentialsReply
{
    optional string             x509_key    = 1;
    optional string             x509_cert   = 2;
    optional string             ssh_pub     = 3;
}

// ============================ Permissions Messages

message CheckPermsRequest
{
    required string             id          = 1;
    required uint32             perms       = 2;
}

message CheckPermsReply
{
    required string             id          = 1;
    required uint32             granted     = 2;
    required uint32             denied      = 3;
}

// ============================ User Messages

message UserViewRequest
{
    optional string             user        = 1;
    optional bool               details     = 2;
}

message UserListRequest
{
    optional bool               details     = 1;
    optional uint32             offset      = 2;
    optional uint32             count       = 3;
}

// Returned for any command the returns one or more user records
message UserDataReply
{
    repeated SDMS.UserData      user        = 1;
}

// ============================ Data Record Messages

message RecordViewRequest
{
    required string             id          = 1;
    optional bool               details     = 2;
}

// Returned for any command the returns one or more user records
message RecordDataReply
{
    repeated SDMS.RecordData    record      = 1;
}

// ============================ Raw Data Messages

message ResolveXfrRequest
{
    required string             id          = 1;
    required uint32             perms       = 2;
}

message ResolveXfrReply
{
    required string             id          = 1;
    required SDMS.XfrStatus     xfr_status  = 2;
    optional string             src_path    = 3;
    required string             src_name    = 4;
    optional string             globus_id   = 5;
    optional string             task_id     = 6;
}

message GetDataMessage
{
    required string             id          = 1;
    optional string             local_path  = 2;
}

message PutDataMessage
{
    required string             id          = 1;
    optional string             local_path  = 2;
}

// ============================ Collection Messages

message CollListRequest
{
    optional string             user        = 1;
    optional bool               details     = 2;
    optional uint32             offset      = 3;
    optional uint32             count       = 4;
}

// Returned for any command the returns one or more user records
message CollDataReply
{
    repeated SDMS.CollData      coll        = 1;
}
