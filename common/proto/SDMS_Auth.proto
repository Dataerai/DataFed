import "SDMS.proto";

package SDMS.Auth;

enum Protocol
{
    ID = 2;
}


// ============================ Setup/Config Messages

message GenerateCredentialsRequest
{
}

message GenerateCredentialsReply
{
    required string             pub_key     = 1;
    required string             priv_key    = 2;
}

// ============================ Permissions Messages

message CheckPermsRequest
{
    required string             id          = 1;
    required uint32             perms       = 2;
}

message CheckPermsReply
{
    required uint32             granted     = 1;
}

// ============================ User Messages

message UserSaveTokensRequest
{
    required string             access      = 1;
    required string             refresh     = 2;
}

message UserCreateRequest
{
    required string             uid         = 1;
    required string             password    = 2;
    required string             name        = 3;
    required string             email       = 4;
    repeated string             uuid        = 5;
}

message UserViewRequest
{
    required string             uid         = 1;
    optional bool               details     = 2;
}

message UserFindByUUIDsRequest
{
    repeated string             uuid        = 1;
}

message UserUpdateRequest
{
    required string             uid         = 1;
    optional string             email       = 2;
}

message UserListRequest
{
    optional bool               details     = 1;
    optional uint32             offset      = 2;
    optional uint32             count       = 3;
}

// Returned for any command the returns one or more user records
message UserDataReply
{
    repeated SDMS.UserData      user        = 1;
}

// ============================ Data Record Messages

message RecordListRequest
{
}

message RecordViewRequest
{
    required string             id          = 1;
    optional bool               details     = 2;
}

message RecordFindRequest
{
    required string             query       = 1;
}

// Returned for any command the returns one or more user records
message RecordDataReply
{
    repeated SDMS.RecordData    data        = 1;
}

message RecordCreateRequest
{
    required string             title       = 1;
    optional string             desc        = 2;
    optional string             alias       = 3;
    optional string             metadata    = 4;
    optional string             proj_id     = 5;
    optional string             coll_id     = 6;
}

message RecordUpdateRequest
{
    required string             id          = 1;
    optional string             title       = 2;
    optional string             desc        = 3;
    optional string             alias       = 4;
    optional string             metadata    = 5;
    optional bool               mdset       = 6;
    optional string             proj_id     = 7;
    optional uint64             data_size   = 8;
    optional uint32             data_time   = 9;
    optional string             subject     = 10;
}

message RecordDeleteRequest
{
    required string             id          = 1;
}

message RecordDeleteReply
{
    required string             id          = 1;
}

// ============================ Raw Data Messages

message XfrViewRequest
{
    required string             xfr_id      = 1;
}

message XfrListRequest
{
    optional uint32             from        = 1;
    optional uint32             to          = 2;
    optional uint32             since       = 3;
    optional SDMS.XfrStatus     status      = 4;
}

message XfrDataReply
{
    repeated SDMS.XfrData       xfr         = 1;
}

message DataGetRequest
{
    required string             id          = 1;
    required string             local       = 2;
}

message DataPutRequest
{
    required string             id          = 1;
    required string             local       = 2;
}

message DataDeleteRequest
{
    required string             id          = 1;
}


// ============================ Collection Messages

message CollCreateRequest
{
    required string             title       = 1;
    optional string             desc        = 2;
    optional string             alias       = 3;
    optional string             proj_id     = 4;
    optional string             coll_id     = 5;
}

message CollUpdateRequest
{
    required string             id          = 1;
    optional string             title       = 2;
    optional string             desc        = 3;
    optional string             alias       = 4;
    optional string             proj_id     = 5;
}

message CollDeleteRequest
{
    required string             id          = 1;
}

message CollListRequest
{
    optional string             user        = 1;
    optional bool               details     = 2;
    optional uint32             offset      = 3;
    optional uint32             count       = 4;
}

message CollViewRequest
{
    required string             id          = 1;
}

message CollReadRequest
{
    required string             id          = 1;
    optional CollMode           mode        = 2;
    optional bool               details     = 3;
    optional uint32             offset      = 4;
    optional uint32             count       = 5;
}

message CollWriteRequest
{
    required string             id          = 1;
    repeated string             add         = 2;
    repeated string             rem         = 3;
    optional bool               rem_all     = 4;
}

// Returned for any command the returns one or more user records
message CollDataReply
{
    repeated SDMS.CollData      data        = 1;
}

// ============================ Group Messages

message GroupCreateRequest
{
    required SDMS.GroupData     group       = 1;
}

message GroupUpdateRequest
{
    required string             gid         = 1;
    optional string             uid         = 2;
    optional string             title       = 3;
    optional string             desc        = 4;
    repeated string             add_uid     = 5;
    repeated string             rem_uid     = 6;
}

message GroupDataReply
{
    repeated SDMS.GroupData     group       = 1;
}

message GroupDeleteRequest
{
    required string             gid         = 1;
}

message GroupListRequest
{
}

message GroupViewRequest
{
    required string             gid         = 1;
}

// ============================ ACL Messages

message ACLViewRequest
{
    required string             id          = 1;
}

message ACLUpdateRequest
{
    required string             id          = 1;
    required string             rules       = 2;
}

message ACLDataReply
{
    repeated ACLRule            rule        = 1;
}

// ============================ Repo Messages

message RepoDataDeleteRequest
{
    required string             id          = 1;
}

message RepoDataGetSizeRequest
{
    required string             id          = 1;
}

message RepoDataSizeReply
{
    required string             id          = 1;
    required uint64             size        = 2;
}
