// ALERT: If messages in this proto file are ADDED or REMOVED, or if the
// definitions of existing message fields are CHANGED, then the VER_PROTO_MAJOR
// enum value in Version.proto must be incremented and backward compatibility
// will be lost. If fields are APPENDED to the end of existing message
// definitions, then VER_PROTO_MINOR must be incremented and backward
// compatibility will be maintained. Unused messages and parameters should be
// marked as deprecated, and these should be removed at the next major version
// change.

syntax = "proto2";

import "SDMS.proto";

package SDMS.Anon;

enum Protocol
{
    ID = 1;
}


// ============================ Messages


message AckReply
{
}

// NackReply is only used to capture error information.
// Text error messages are optional but useful, and
// should generally be used.

message NackReply
{
    required SDMS.ErrorCode     err_code    = 1;
    optional string             err_msg     = 2;
}

message VersionRequest
{
}

message VersionReply
{
    required uint32             major       = 1;
    required uint32             mapi_major  = 2;
    required uint32             mapi_minor  = 3;
    required uint32             server      = 4;
    required uint32             client      = 5;
}


message StatusRequest
{
}

message StatusReply
{
    required SDMS.ServiceStatus status      = 1;
}

message ServerInfoRequest
{
}

message ServerInfoReply
{
    required string             country     = 1;
    required string             org         = 2;
    required string             unit        = 3;
}

message GetAuthStatusRequest
{
}

message AuthStatusReply
{
    required bool               auth        = 1;
    optional string             uid         = 2;
}

message AuthenticateByPasswordRequest
{
    required string             uid         = 1;    // Local user ID
    required string             password    = 2;    // Password or passcode
}

message AuthenticateByTokenRequest
{
    required string             token       = 1;    // Access token
}

message DOIViewRequest
{
    required string             doi         = 1;
    optional bool               details     = 2;
}

// TODO Does this need to be in anon?
message UserViewRequest
{
    required string             uid         = 1;
    optional bool               details     = 2;
}

message UserDataReply
{
    repeated SDMS.UserData      user        = 1;
    optional uint32             offset      = 2;
    optional uint32             count       = 3;
    optional uint32             total       = 4;
}

