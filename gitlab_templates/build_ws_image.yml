stages:
  - build

build-ws:
  stage: build
  variables:
    IMAGE_TAG: "datafed/ws"
    GIT_STRATEGY: clone
  tags:
    - ci-datafed-core
    - docker
  rules:
    - changes:
        - docker/**/*
        - scripts/**/*
        - web/**/*
        - common/proto/**/*
        - .gitlab-ci.yml
      when: on_success
  script:
    - BRANCH_LOWER=$(echo "$CI_COMMIT_REF_NAME" | tr '[:upper:]' '[:lower:]')
    - echo "$BRANCH_LOWER"
    - ./scripts/generate_datafed.sh
    - docker login "${REGISTRY}" -u "${HARBOR_USER}" -p "${HARBOR_DATAFED_GITLAB_CI_REGISTRY}"
    - docker build --build-arg DEPENDENCIES="${REGISTRY}/datafed/dependencies-${BRANCH_LOWER}:latest" --build-arg RUNTIME="${REGISTRY}/datafed/runtime-${BRANCH_LOWER}:latest" -f web/docker/Dockerfile -t "${REGISTRY}/${IMAGE_TAG}-${BRANCH_LOWER}:latest" .
    - docker push "${REGISTRY}/${IMAGE_TAG}-${BRANCH_LOWER}"

# Prevents downstream pipeline from being empty and triggering a failure, the
# build-ws job above may or may not run because of the rules section, if there
# are no jobs in the pipeline GitLab has the unfortunate behavior of reporting
# the trigger as a failure. To prevent the pipeline from being empty the
# placeholder job is created.
#placeholder:
#  stage: build
#  tags:
#    - docker
#  script:
#    - echo "placeholder"
 
