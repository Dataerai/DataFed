stages:
  - setup
  - build-base
  - deploy-base
  - build-unit-test
  - deploy

################################################################################
# STAGE: setup
################################################################################
# Setup stage is designed to check that the infrastructure is up and running
# before attempting to launch the CI pipelines
setup-vms:
  stage: setup
  tags:
    - datafed-infrastructure 
  script:
    - ./scripts/pipeline_setup.sh --compute-instance-id $OS_CI_DATAFED_ARANGO_ID
    - ./scripts/pipeline_setup.sh --compute-instance-id $OS_CI_DATAFED_CORE_ID
    - ./scripts/pipeline_setup.sh --compute-instance-id $OS_CI_DATAFED_GLOBUS1_ID
    - ./scripts/pipeline_setup.sh --compute-instance-id $OS_CI_DATAFED_GLOBUS2_ID

################################################################################
# STAGE: build-base
################################################################################
# Building base containers the base containers should have all the required
# dependencies it should not be necessary to build them every time. Ideally, we
# would rarely need to rebuild the dependencies and we could just reuse the 
# container "golden base" images already stored in the registry. 
#
# NOTE GitLab is set to remove images after a month, so they will be forced to
# rebuild at least once a month.
build-ws-base:
  stage: build-base
  variables:
    IMAGE_TAG: "dlsw/datafed/ws-base"
  tags:
    - ci-datafed-core
    - docker
  rules:
    - changes:
      - dockerfiles/Dockerfile.web-base.ubuntu
      - scripts/install_ws_dependencies.sh 
      - scripts/dependency_install_functions.sh
      - common/proto/*
      - .gitlab-ci.yml
      when: always
    - when: manual
  script:
    - docker build -f dockerfiles/Dockerfile.web-base.ubuntu -t code.ornl.gov:4567/${IMAGE_TAG} .

build-core-base:
  stage: build-base
  variables:
    IMAGE_TAG: "dlsw/datafed/core-base"
  tags:
    - ci-datafed-core
    - docker
  rules:
    - changes:
      - dockerfiles/Dockerfile.core-base.ubuntu
      - scripts/install_core_dependencies.sh 
      - scripts/dependency_install_functions.sh
      - .gitlab-ci.yml
      when: always
    - when: manual
  script:
    - docker build -f dockerfiles/Dockerfile.core-base.ubuntu -t code.ornl.gov:4567/${IMAGE_TAG} .

build-repo-base:
  variables:
    IMAGE_TAG: "dlsw/datafed/repo-base"
  stage: build-base
  tags:
    - ci-datafed-repo
    - docker
  rules:
    - changes:
      - dockerfiles/Dockerfile.repo-base.ubuntu
      - scripts/install_repo_dependencies.sh 
      - scripts/dependency_install_functions.sh
      - .gitlab-ci.yml
      when: always
    - when: manual
  script:
    - docker build -f dockerfiles/Dockerfile.repo-base.ubuntu -t code.ornl.gov:4567/${IMAGE_TAG} .

# This build runs two builds, one to build the gcs image provided by Globus
# The second to build on top of the gcs image and add the authz dependencies
build-gcs-authz-base:
  variables:
    IMAGE_TAG: "dlsw/datafed/gcs-base"
    IMAGE_TAG2: "dlsw/datafed/gcs-authz-base"
    IMAGE_TAG3: "dlsw/datafed/gcs-authz"
  stage: build-base
  tags:
    - ci-datafed-globus
    - docker
  rules:
    - changes:
      - dockerfiles/Dockerfile.gcs-base.ubuntu
      - dockerfiles/Dockerfile.gcs-authz-base.ubuntu
      - scripts/install_gcs.sh
      - scripts/install_authz_dependencies.sh
      - scripts/dependency_install_functions.sh
      - scripts/generate_datafed.sh
      - scripts/generate_authz_config.sh
      - .gitlab-ci.yml
      when: always
    - when: manual
  script:
    - docker build -f dockerfiles/Dockerfile.gcs-base.ubuntu -t code.ornl.gov:4567/${IMAGE_TAG} .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN code.ornl.gov:4567
    - docker push code.ornl.gov:4567/${IMAGE_TAG}
    - docker build -f dockerfiles/Dockerfile.gcs-authz-base.ubuntu -t code.ornl.gov:4567/${IMAGE_TAG2} .
    - docker push code.ornl.gov:4567/${IMAGE_TAG2}
    - docker build -f dockerfiles/Dockerfile.gcs-authz-base.ubuntu -t code.ornl.gov:4567/${IMAGE_TAG3} .
    - docker push code.ornl.gov:4567/${IMAGE_TAG3}


################################################################################
# STAGE: deploy-base
################################################################################

# Deploying base containers
deploy-ws-base:
  stage: deploy-base
  needs: ["build-ws-base"]
  tags:
    - ci-datafed-core
    - docker
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN code.ornl.gov:4567
    - docker push code.ornl.gov:4567/dlsw/datafed/ws-base

deploy-core-base:
  stage: deploy-base
  needs: ["build-core-base"]
  tags:
    - ci-datafed-core
    - docker
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN code.ornl.gov:4567
    - docker push code.ornl.gov:4567/dlsw/datafed/core-base

deploy-repo-base:
  stage: deploy-base
  needs: ["build-repo-base"]
  tags:
    - ci-datafed-repo
    - docker
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN code.ornl.gov:4567
    - docker push code.ornl.gov:4567/dlsw/datafed/repo-base

deploy-gcs-authz-base:
  stage: deploy-base
  needs: ["build-gcs-authz-base"]
  tags:
    - ci-datafed-globus
    - docker
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN code.ornl.gov:4567
    - docker push code.ornl.gov:4567/dlsw/datafed/gcs-authz-base

################################################################################
# STAGE: build 
################################################################################
# Building containers for running services
build-ws:
  variables:
    IMAGE_TAG: "dlsw/datafed/ws-"
  stage: build-unit-test
  tags:
    - ci-datafed-core
    - docker
  rules:
    - changes:
      - dockerfiles/*
      - scripts/*
      - web/*
      - common/proto/* 
      - .gitlab-ci.yml
      when: always
    - exists:
      - deploy-ws-base
      when: always
    - when: manual
  script:
    - BRANCH_LOWER=$(echo "$CI_COMMIT_REF_NAME" | tr '[:upper:]' '[:lower:]')
    - echo "$BRANCH_LOWER"
    - ./scripts/generate_datafed.sh
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN code.ornl.gov:4567
    - docker build -f dockerfiles/Dockerfile.web.ubuntu -t "code.ornl.gov:4567/${IMAGE_TAG}${BRANCH_LOWER}" .

build-core:
  variables:
    IMAGE_TAG: "dlsw/datafed/core-"
  stage: build-unit-test
  tags:
    - ci-datafed-core
    - docker
  rules:
    - changes:
      - dockerfiles/*
      - scripts/*
      - common/*
      - core/* 
      - .gitlab-ci.yml
      when: always
    - when: manual
  script:
    - BRANCH_LOWER=$(echo "$CI_COMMIT_REF_NAME" | tr '[:upper:]' '[:lower:]')
    - echo "$BRANCH_LOWER"
    - env
    - ./scripts/generate_datafed.sh
    - cat ./config/datafed.sh
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN code.ornl.gov:4567
    - docker build -f dockerfiles/Dockerfile.core.ubuntu -t "code.ornl.gov:4567/${IMAGE_TAG}${BRANCH_LOWER}" .

build-foxx:
  stage: build-unit-test
  needs: ["setup-vms"]
  tags:
    - ci-datafed-arango
  rules:
    - changes:
      - CMakeLists.txt
      - scripts/*
      - core/database/*
      - .gitlab-ci.yml
      when: always
  script:
    - arangod --version
    - sudo systemctl status arangodb3
    - ./scripts/generate_datafed.sh
    - env
    - cat ./config/datafed.sh
    - cmake -S. -B build -DENABLE_FOXX_TESTS=ON -DBUILD_CORE_SERVER=OFF -DBUILD_COMMON=OFF -DBUILD_WEB_SERVER=OFF -DBUILD_DOCS=OFF -DBUILD_PYTHON_CLIENT=OFF -DBUILD_TESTS=ON -DINSTALL_FOXX=ON
    - cmake --build build
    - cmake --build build --target install
    - cmake --build build --target test


build-repo:
  variables:
    IMAGE_TAG: "dlsw/datafed/repo-"
  stage: build-unit-test
  tags:
    - ci-datafed-repo
    - docker
  rules:
    - changes:
      - dockerfiles/*
      - scripts/*
      - common/* 
      - repository/*
      - .gitlab-ci.yml
      when: always
    - when: manual
  script:
    - BRANCH_LOWER=$(echo "$CI_COMMIT_REF_NAME" | tr '[:upper:]' '[:lower:]')
    - echo "$BRANCH_LOWER"
    - ./scripts/generate_datafed.sh
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN code.ornl.gov:4567
    - docker build -f dockerfiles/Dockerfile.repo.ubuntu -t "code.ornl.gov:4567/${IMAGE_TAG}${BRANCH_LOWER}" .

build-gcs-authz:
  variables:
    IMAGE_TAG: "dlsw/datafed/gcs-authz-"
  stage: build-unit-test
  tags:
    - ci-datafed-globus
    - docker
  script:
    - BRANCH_LOWER=$(echo "$CI_COMMIT_REF_NAME" | tr '[:upper:]' '[:lower:]')
    - echo "$BRANCH_LOWER"
    - ./scripts/generate_datafed.sh
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN code.ornl.gov:4567
    - docker build -f dockerfiles/Dockerfile.gcs-authz.ubuntu -t "code.ornl.gov:4567/${IMAGE_TAG}${BRANCH_LOWER}" .


# Deploying containers for running services
deploy-ws:
  stage: deploy
  needs: ["build-ws"]
  variables:
    IMAGE_TAG: "dlsw/datafed/ws-"
  tags:
    - ci-datafed-core
    - docker
  script:
    - BRANCH_LOWER=$(echo "$CI_COMMIT_REF_NAME" | tr '[:upper:]' '[:lower:]')
    - echo "$BRANCH_LOWER"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN code.ornl.gov:4567
    - docker push "code.ornl.gov:4567/${IMAGE_TAG}${BRANCH_LOWER}"

deploy-core:
  stage: deploy
  needs: ["build-core"]
  variables:
    IMAGE_TAG: "dlsw/datafed/core-"
  tags:
    - ci-datafed-core
    - docker
  script:
    - BRANCH_LOWER=$(echo "$CI_COMMIT_REF_NAME" | tr '[:upper:]' '[:lower:]')
    - echo "$BRANCH_LOWER"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN code.ornl.gov:4567
    - docker push "code.ornl.gov:4567/${IMAGE_TAG}${BRANCH_LOWER}"

deploy-repo:
  stage: deploy
  needs: ["build-repo"]
  variables:
    IMAGE_TAG: "dlsw/datafed/repo-"
  tags:
    - ci-datafed-repo
    - docker
  script:
    - BRANCH_LOWER=$(echo "$CI_COMMIT_REF_NAME" | tr '[:upper:]' '[:lower:]')
    - echo "$BRANCH_LOWER"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN code.ornl.gov:4567
    - docker push "code.ornl.gov:4567/${IMAGE_TAG}${BRANCH_LOWER}"

deploy-gcs-authz:
  stage: deploy
  needs: ["build-gcs-authz"]
  variables:
    IMAGE_TAG: "dlsw/datafed/gcs-authz-"
  tags:
    - ci-datafed-globus
    - docker
  script:
    - BRANCH_LOWER=$(echo "$CI_COMMIT_REF_NAME" | tr '[:upper:]' '[:lower:]')
    - echo "$BRANCH_LOWER"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN code.ornl.gov:4567
    - docker push "code.ornl.gov:4567/${IMAGE_TAG}${BRANCH_LOWER}"

